name: dotnet-publish-image
description: .NET docker build and push
inputs:
  working-directory:
    description: Directory path of project
    required: true
  image-name:
    required: true
    description: Image name
  github-token:
    required: false
    description: GitHub Token
    default: ${{ github.token }}

runs:
  using: composite
  steps:

  - name: Setup .NET
    uses: actions/setup-dotnet@v4
    with:
      dotnet-version: |
        9.0.x

  - name: .NET Restore dependencies
    shell: bash
    run: |
      dotnet nuget list source
      if dotnet nuget list source | grep -q "GitHub"; then
        dotnet nuget update source GitHub -u ${{ github.actor }} -p ${{ inputs.github-token }} --store-password-in-clear-text
      fi
      dotnet restore
    working-directory: ${{ inputs.working-directory }}

  - name: .NET Tool Restore
    shell: bash
    run: dotnet tool restore
    working-directory: ${{ inputs.working-directory }}

  - name: .NET Publish
    shell: bash
    run: dotnet publish -c Release --nologo --no-restore -o ./publishOutput
    working-directory: ${{ inputs.working-directory }}

  - name: Login to GHCR
    uses: docker/login-action@v3
    with:
      registry: ghcr.io
      username: ${{ github.actor }}
      password: ${{ github.token }}

  - name: Set up Docker Buildx
    uses: docker/setup-buildx-action@v3

  - name: Docker Metadata
    id: meta
    uses: docker/metadata-action@v5
    with:
      images: ghcr.io/Cristian-Stanescu/${{ inputs.image-name }}
      tags: |
        type=sha,format=long
        type=sha,prefix=${{ github.run_number }}-,suffix=,format=short
        type=raw,value=latest,enable={{is_default_branch}}

  - name: Build and push Docker Image
    uses: docker/build-push-action@v5
    with:
      build-args: |
        DOCKER_METADATA_OUTPUT_JSON
      context: ${{ inputs.working-directory }}
      push: true
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
