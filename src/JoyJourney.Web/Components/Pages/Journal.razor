@page "/journal"
@attribute [StreamRendering(true)]
@attribute [OutputCache(Duration = 5)]

@using JoyJourney.Web.Models

@inject JournalApiClient JournalApi

<PageTitle>My Journal</PageTitle>

<div class="gratitude-section">
    <div class="express-gratitude-card">
        <h2 class="card-title">Express Gratitude</h2>
        <div class="input-section">
            <textarea class="gratitude-input" placeholder="Share Something Nice" rows="3"></textarea>
            <button class="submit-btn">Submit</button>
        </div>
    </div>
</div>

<div class="inspiration-section">
    <h3 class="inspiration-title">Cultivate Gratitude Daily</h3>
    <p class="inspiration-text">
        When beginnings live. Peace on tomorrow's - Express love. Plant flowers. Appreciate. Daily with family. Finding. Inspiring. Appreciate. Daily family.
        Build beautiful life mission found. Explore mind, music spend. Inspiration warm. Listen daily. Families, beautiful family mission...
    </p>
    <p class="inspiration-text">
        Sights are perspective. Inspiration relaxed Happiness...
    </p>
</div>


@if (journalEntries == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <tbody>
            @foreach (var entry in journalEntries)
            {
                <tr>
                    <td>@entry.Content</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<JournalEntryDto> journalEntries = [];

    protected override async Task OnInitializedAsync()
    {
        journalEntries = await JournalApi.GetJournalEntriesAsync();
    }
}
